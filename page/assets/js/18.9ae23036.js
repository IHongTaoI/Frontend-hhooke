(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{221:function(t,v,_){"use strict";_.r(v);var s=_(0),a=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"更多详情命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更多详情命令"}},[t._v("#")]),t._v(" 更多详情命令")]),t._v(" "),_("h2",{attrs:{id:"git-commit-amend"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend"}},[t._v("#")]),t._v(" 💥 git commit --amend")]),t._v(" "),_("p",[t._v("改写提交，例如目前我有一个刚刚提交的更改，这时候我发现少打了一个字符，需要更改这个提交这时候我们就可以更改这个提交")]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/1.png",alt:"avatar"}})]),t._v(" "),_("p",[t._v("修改好test.md文件后")]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/2.png",alt:"avatar"}})]),t._v(" "),_("p",[t._v("这时候查看 git 日子 发现之前的 "),_("code",[t._v("一个提交")]),t._v(" 已经被替换成了 "),_("code",[t._v("这是一个新的提交")])]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/3.png",alt:"avatar"}})]),t._v(" "),_("h2",{attrs:{id:"git-stash"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" 💥 git stash")]),t._v(" "),_("p",[t._v("当我们在开发一个版本的时候，突然上一个版本出了一个bug需要修复。这时候一般的做法就是将当前代码提交一个"),_("code",[t._v("commit")]),t._v("然后新建一条分支修改"),_("code",[t._v("bug")]),t._v(",但是这样子无非是污染到了"),_("code",[t._v("commit")]),t._v("提交信息，因为我们新版本还未开发完。所以 "),_("code",[t._v("git stash")]),t._v("就能够解决这个问题")]),t._v(" "),_("p",[t._v("🍗 "),_("strong",[t._v("保存当前的代码")])]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("git stash")]),t._v(" 直接将代码保存到stash中")])]),t._v(" "),_("li",[_("p",[_("code",[t._v('git stash save "message"')]),t._v(" 将代码保存到stash中,病对其加以注释(新文件会被忽略)")])]),t._v(" "),_("li",[_("p",[_("code",[t._v('git stash save -a "message"')]),t._v(" 包含新文件")])])]),t._v(" "),_("p",[t._v("🍗 "),_("strong",[t._v("查看stash")])]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("git stash list")]),t._v(" 查看stash了哪些存储")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("git stash show")]),t._v(" 查看第一条stash的改动信息")]),t._v(" "),_("p",[t._v("如需查看其他stash的改动信息,如查看第二个 "),_("code",[t._v("git stash show stash@{1}")])]),t._v(" "),_("p",[_("code",[t._v("-p")]),t._v(" 显示具体改动 "),_("code",[t._v("git stash show -p")])])])]),t._v(" "),_("p",[t._v("🍗 "),_("strong",[t._v("取回stash的代码")])]),t._v(" "),_("ul",[_("li",[_("p",[_("code",[t._v("git stash apply")]),t._v(" 应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}")]),t._v(" "),_("p",[t._v("如需使用其他的 "),_("code",[t._v("git stash apply stash@{$num}")])])]),t._v(" "),_("li",[_("p",[_("code",[t._v("git stash pop")]),t._v(" 与 "),_("code",[t._v("apply")]),t._v(" 差不多，只不过这个在取出之后会将此stash空间删除")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("git stash drop stash@{$num}")]),t._v(" 丢弃stash@{$num}存储，从列表中删除这个存储")])]),t._v(" "),_("li",[_("p",[_("code",[t._v("git stash clear")]),t._v(" 删除所有缓存的stash")])])]),t._v(" "),_("p",[t._v("🍗 "),_("strong",[t._v("举例说明")])]),t._v(" "),_("p",[t._v("当前我的git信息")]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/4.png",alt:"avatar"}})]),t._v(" "),_("p",[t._v("当前我的分支修改状态 一个改动的文件，一个新增的文件")]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/5.png",alt:"avatar"}})]),t._v(" "),_("p",[t._v("如果我们直接执行 "),_("code",[t._v("git stash")]),t._v(" 新增的文件"),_("code",[t._v("testNew.md")]),t._v("是不会被添加进去的，需要执行 "),_("code",[t._v("git stash -a")]),t._v(" 方可将两个文件都缓存进去")]),t._v(" "),_("p",[t._v("如果添加stash的时候不写备注，则会使用分支最近的一条log的备注")]),t._v(" "),_("div",{staticClass:"language-key extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("PS C:\\study\\Frontend-hhooke> git stash list\nstash@{0}: WIP on master: 8422a02 test文件\n")])])]),_("p",[t._v("使用 "),_("code",[t._v('git stash save -a "这是备注"')])]),t._v(" "),_("div",{staticClass:"language-key extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("PS C:\\study\\Frontend-hhooke> git stash list\nstash@{0}: On master: 这是备注\n")])])]),_("h2",{attrs:{id:"git-log"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" 💥 git log")]),t._v(" "),_("blockquote",[_("p",[t._v("(我个人反正是不用命令行的方式来查看)")])]),t._v(" "),_("ul",[_("li",[_("p",[_("strong",[t._v("默认")]),t._v(" "),_("code",[t._v("git log")])]),t._v(" "),_("p",[t._v("无参数。默认不用任何参数的话，git log 会按提交时间列出所有的更新，最近的更新排在最上面。每次更新都有一个 SHA-1 校验和、作者的名字 和 电子邮件地址、提交时间，最后缩进一个段落显示提交说明。")]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/6.png",alt:"avatar"}})])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("展开内容差异")]),t._v(" "),_("code",[t._v("git log -p")])]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/7.png",alt:"avatar"}})])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("行数统计")]),t._v(" "),_("code",[t._v("git log --stat")])]),t._v(" "),_("p",[_("img",{attrs:{src:"/git/8.png",alt:"avatar"}})])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("格式化显示")]),t._v(" "),_("code",[t._v("git log --pretty")])]),t._v(" "),_("p",[_("strong",[t._v("简单模式")])]),t._v(" "),_("div",{staticClass:"language-key extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("  git log --pretty=oneline\n  git log --pretty=short\n  git log --pretty=full\n  git log --pretty=fuller\n")])])]),_("p",[_("strong",[t._v("定制格式")])]),t._v(" "),_("p",[_("code",[t._v('git log --pretty=format:"%h - %an, %ar : %s"')])])])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("选项")]),t._v(" "),_("th",[t._v("说明")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("%H")]),t._v(" "),_("td",[t._v("提交对象（commit）的完整哈希字串")])]),t._v(" "),_("tr",[_("td",[t._v("%h")]),t._v(" "),_("td",[t._v("提交对象的简短哈希字串")])]),t._v(" "),_("tr",[_("td",[t._v("%T")]),t._v(" "),_("td",[t._v("树对象（tree）的完整哈希字串")])]),t._v(" "),_("tr",[_("td",[t._v("%t")]),t._v(" "),_("td",[t._v("树对象的简短哈希字串")])]),t._v(" "),_("tr",[_("td",[t._v("%P")]),t._v(" "),_("td",[t._v("父对象（parent）的完整哈希字串")])]),t._v(" "),_("tr",[_("td",[t._v("%p")]),t._v(" "),_("td",[t._v("父对象的简短哈希字串")])]),t._v(" "),_("tr",[_("td",[t._v("%an")]),t._v(" "),_("td",[t._v("作者（author）的名字")])]),t._v(" "),_("tr",[_("td",[t._v("%ae")]),t._v(" "),_("td",[t._v("作者的电子邮件地址")])]),t._v(" "),_("tr",[_("td",[t._v("%ad")]),t._v(" "),_("td",[t._v("作者修订日期（可以用 -date= 选项定制格式）")])]),t._v(" "),_("tr",[_("td",[t._v("%ar")]),t._v(" "),_("td",[t._v("作者修订日期，按多久以前的方式显示")])]),t._v(" "),_("tr",[_("td",[t._v("%cn")]),t._v(" "),_("td",[t._v("提交者(committer)的名字")])]),t._v(" "),_("tr",[_("td",[t._v("%ce")]),t._v(" "),_("td",[t._v("提交者的电子邮件地址")])]),t._v(" "),_("tr",[_("td",[t._v("%cd")]),t._v(" "),_("td",[t._v("提交日期")])]),t._v(" "),_("tr",[_("td",[t._v("%cr")]),t._v(" "),_("td",[t._v("提交日期，按多久以前的方式显示")])]),t._v(" "),_("tr",[_("td",[t._v("%s")]),t._v(" "),_("td",[t._v("提交说明")])])])]),t._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[t._v("参考自")]),t._v(" "),_("p",[_("a",{attrs:{href:"https://www.jianshu.com/p/0805b5d5d893",target:"_blank",rel:"noopener noreferrer"}},[t._v("git log 的使用"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=a.exports}}]);