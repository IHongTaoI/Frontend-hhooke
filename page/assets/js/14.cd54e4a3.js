(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{218:function(t,s,a){"use strict";a.r(s);var v=a(0),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"更多"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更多"}},[t._v("#")]),t._v(" 更多")]),t._v(" "),a("h2",{attrs:{id:"git-commit-amend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend"}},[t._v("#")]),t._v(" 💥 git commit --amend")]),t._v(" "),a("p",[t._v("改写提交，例如目前我有一个刚刚提交的更改，这时候我发现少打了一个字符，需要更改这个提交这时候我们就可以更改这个提交")]),t._v(" "),a("p",[a("img",{attrs:{src:"/hhooke/git/1.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("修改好test.md文件后")]),t._v(" "),a("p",[a("img",{attrs:{src:"/hhooke/git/2.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("这时候查看 git 日子 发现之前的 "),a("code",[t._v("一个提交")]),t._v(" 已经被替换成了 "),a("code",[t._v("这是一个新的提交")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/hhooke/git/3.png",alt:"avatar"}})]),t._v(" "),a("h2",{attrs:{id:"git-stash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-stash"}},[t._v("#")]),t._v(" 💥 git stash")]),t._v(" "),a("p",[t._v("当我们在开发一个版本的时候，突然上一个版本出了一个bug需要修复。这时候一般的做法就是将当前代码提交一个"),a("code",[t._v("commit")]),t._v("然后新建一条分支修改"),a("code",[t._v("bug")]),t._v(",但是这样子无非是污染到了"),a("code",[t._v("commit")]),t._v("提交信息，因为我们新版本还未开发完。所以 "),a("code",[t._v("git stash")]),t._v("就能够解决这个问题")]),t._v(" "),a("p",[t._v("🍗 "),a("strong",[t._v("保存当前的代码")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git stash")]),t._v(" 直接将代码保存到stash中")])]),t._v(" "),a("li",[a("p",[a("code",[t._v('git stash save "message"')]),t._v(" 将代码保存到stash中,病对其加以注释(新文件会被忽略)")])]),t._v(" "),a("li",[a("p",[a("code",[t._v('git stash save -a "message"')]),t._v(" 包含新文件")])])]),t._v(" "),a("p",[t._v("🍗 "),a("strong",[t._v("查看stash")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git stash list")]),t._v(" 查看stash了哪些存储")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash show")]),t._v(" 查看第一条stash的改动信息")]),t._v(" "),a("p",[t._v("如需查看其他stash的改动信息,如查看第二个 "),a("code",[t._v("git stash show stash@{1}")])]),t._v(" "),a("p",[a("code",[t._v("-p")]),t._v(" 显示具体改动 "),a("code",[t._v("git stash show -p")])])])]),t._v(" "),a("p",[t._v("🍗 "),a("strong",[t._v("取回stash的代码")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("git stash apply")]),t._v(" 应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即stash@{0}")]),t._v(" "),a("p",[t._v("如需使用其他的 "),a("code",[t._v("git stash apply stash@{$num}")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash pop")]),t._v(" 与 "),a("code",[t._v("apply")]),t._v(" 差不多，只不过这个在取出之后会将此stash空间删除")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash drop stash@{$num}")]),t._v(" 丢弃stash@{$num}存储，从列表中删除这个存储")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("git stash clear")]),t._v(" 删除所有缓存的stash")])])]),t._v(" "),a("p",[t._v("🍗 "),a("strong",[t._v("举例说明")])]),t._v(" "),a("p",[t._v("当前我的git信息")]),t._v(" "),a("p",[a("img",{attrs:{src:"/hhooke/git/4.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("当前我的分支修改状态 一个改动的文件，一个新增的文件")]),t._v(" "),a("p",[a("img",{attrs:{src:"/hhooke/git/5.png",alt:"avatar"}})]),t._v(" "),a("p",[t._v("如果我们直接执行 "),a("code",[t._v("git stash")]),t._v(" 新增的文件"),a("code",[t._v("testNew.md")]),t._v("是不会被添加进去的，需要执行 "),a("code",[t._v("git stash -a")]),t._v(" 方可将两个文件都缓存进去")]),t._v(" "),a("p",[t._v("如果添加stash的时候不写备注，则会使用分支最近的一条log的备注")]),t._v(" "),a("div",{staticClass:"language-key extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("PS C:\\study\\Frontend-hhooke> git stash list\nstash@{0}: WIP on master: 8422a02 test文件\n")])])]),a("p",[t._v("使用 "),a("code",[t._v('git stash save -a "这是备注"')])]),t._v(" "),a("div",{staticClass:"language-key extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("PS C:\\study\\Frontend-hhooke> git stash list\nstash@{0}: On master: 这是备注\n")])])]),a("h2",{attrs:{id:"git-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" 💥 git log")])])}),[],!1,null,null,null);s.default=_.exports}}]);